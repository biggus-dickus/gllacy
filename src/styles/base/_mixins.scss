// Clearfix mixin
@mixin clearfix() {
  &::before,
  &::after {
    content: "";
    display: table;
  }
  &::after {
    clear: both;
  }
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
        border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
        border-color: darken($border, 12%);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
        border-color: darken($border, 12%);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

// Button sizes
// -------------------------------------------------------------------------
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}


// Default or customized transition effect
// -------------------------------------------------------------------------
@mixin transition($property: all, $time: .25s, $timing-function: ease-in-out) {
  transition: $property $time $timing-function;
}


// Absolute centering technique (transforms)
// -------------------------------------------------------------------------
@mixin abs-center($by-x-axis: 50%, $by-y-axis: 50%) {
  position: absolute;
  @if $by-x-axis and $by-y-axis {
    left: $by-x-axis;
    top: $by-y-axis;
    transform: translate(-$by-x-axis, -$by-y-axis);
  }
  @else if $by-x-axis and $by-y-axis == false {
    left: $by-x-axis;
    transform: translateX(-$by-x-axis);
  }
  @else if $by-x-axis == false and $by-y-axis {
    top: $by-y-axis;
    transform: translateY(-$by-y-axis);
  }
}


// Absolute centering technique (margin-auto)
// -------------------------------------------------------------------------
@mixin centering-absolute($plane: 'else') {
  position: absolute;
  @if $plane == 'horizontal' {
    left: 0; right: 0;
    margin-left: auto;
    margin-right: auto;
  } @else if $plane == 'vertical' {
    top: 0; bottom: 0;
    margin-top: auto;
    margin-bottom: auto;
  } @else {
    left: 0; right: 0;
    top: 0; bottom: 0;
    margin: auto;
  }
}


// Different placeholder inserts
// -------------------------------------------------------------------------
@mixin placeholder-color($color:#909) {
  ::-webkit-input-placeholder { color: $color; @content }
  :-moz-placeholder { color: $color; opacity: 1; @content }
  ::-moz-placeholder { color: $color; opacity: 1; @content }
  :-ms-input-placeholder {color: $color; @content }
}
@mixin placeholder-input($opacity, $color) {
  &::-moz-placeholder {
    opacity: $opacity;
    color: $color;
  }
  &::-ms-input-placeholder {
    opacity: $opacity;
    color: $color;
  }
  &::-webkit-input-placeholder {
    opacity: $opacity;
    color: $color;
  }
  &::placeholder {
    opacity: $opacity;
    color: $color;
  }
}
@mixin placeholder-textarea($font-size, $transform) {
  &::-moz-placeholder {
    font-size: $font-size;
    text-transform: $transform;
  }
  &::-ms-input-placeholder {
    font-size: $font-size;
    text-transform: $transform;
  }
  &::-webkit-input-placeholder {
    font-size: $font-size;
    text-transform: $transform;
  }
  &::placeholder {
    font-size: $font-size;
    text-transform: $transform;
  }
}


// Brackets like "<" and ">"
// -------------------------------------------------------------------------
@mixin angle-brackets($location:false, $direction:false, $size:false, $weight: false, $color:false) {
  &:#{$location} {
    content: "";
    background-color: transparent;
    width: $size;
    height: $size;
    border-top: solid $weight $color;
    border-right: solid $weight $color;
    position: absolute;

    @if $direction == top {
      transform: rotate(-45deg);
    }
    @else if $direction == right {
      transform: rotate(45deg);
    }
    @else if $direction == bottom {
      transform: rotate(135deg);
    }
    @else {
      transform: rotate(225deg);
    }
    @content;
  }
}


// Equilateral triangle on pure CSS
// -------------------------------------------------------------------------
@mixin triangle($direction, $width, $height, $color) {
  border-style: solid;
  @if $direction == 'bottom' {
    border-width: $height ($width / 2) 0 ($width / 2);
    border-color: $color transparent transparent transparent;
  } @else if $direction == 'left' {
    border-width: ($width / 2) $height ($width / 2) 0;
    border-color: transparent $color transparent transparent;
  } @else if $direction == 'top' {
    border-width: 0 ($width / 2) $height ($width / 2);
    border-color: transparent transparent $color transparent;
  } @else if $direction == 'right' {
    border-width: ($width / 2) 0 ($width / 2) $height;
    border-color: transparent transparent transparent $color;
  } @else {
    @error "Some parameters were set incorrectly!";
  }
  @content;
}


// FF only rules
// -------------------------------------------------------------------------
@mixin firefox-rules() {
  @-moz-document url-prefix() {
    @content;
  }
}


// Target some of the best browsers in the world
// -------------------------------------------------------------------------
@mixin ie-rules() {
  @media all and (-ms-high-contrast:none) {
    @content;
  }
}


// Add two triangles (fishtail) to parent element from the left side
// -------------------------------------------------------------------------
@mixin fishtail($height: 40px, $width: 30px, $color:transparent, $position:left) {
  @if $position != right and $position != left {
    @error "$position not avalible with '#{$position}' value. Please use 'right', or default 'left' value";
  }

  &:before,
  &:after {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    #{$position}: - $width;
  }

  &:before {
    border-top: $height / 2 solid $color;
    border-#{$position}: $width solid transparent;
    top: 0;
  }
  &:after {
    border-bottom: $height / 2 solid $color;
    border-#{$position}: $width solid transparent;
    bottom: 0;
  }
}

// Compose a vertical text rhythm
// -------------------------------------------------------------------------
$v-rhythm-line-height: 24px !default;

@mixin set-font($font-size, $line-height: $v-rhythm-line-height) {
  font-size: $font-size;
  line-height: $v-rhythm-line-height;
}

@mixin set-margin($margin-top: $v-rhythm-line-height, $margin-bottom: $v-rhythm-line-height) {
  margin-top: $margin-top;
  margin-bottom: $margin-bottom;
}
